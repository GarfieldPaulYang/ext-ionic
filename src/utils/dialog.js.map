{"version":3,"sources":["dialog.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAW,iBAAA,EAAmB,eAAA,EAAiB,eAAA,EAAgB,MAAO,eAAA,CAAgB;AAG7F;IACE,gBACU,WAA8B,EAC9B,SAA0B,EAC1B,SAA0B;QAF1B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAiB;IAChC,CAAC;IAEL,sBAAK,GAAL,UAAM,KAAa,EAAE,OAAe;QAClC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,CAAC,IAAI,CAAC;SAChB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,wBAAO,GAAP,UAAQ,KAAa,EAAE,OAAe,EAAE,OAAuC;QAC7E,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,CAAC;oBACR,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,QAAQ;iBACf,EAAE;oBACD,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,OAAO;iBACjB,CAAC;SACH,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,wBAAO,GAAP,UAAQ,OAAe;QACrB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAC7B,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;IAED,sBAAK,GAAL,UAAM,OAAe,EAAE,QAAwB;QAAxB,yBAAA,EAAA,gBAAwB;QAC7C,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAUH,aAAC;AAAD,CAtDA,AAsDC;;AATM,iBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,qBAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,eAAe,GAAG;CACxB,EAJ6F,CAI7F,CAAC","file":"dialog.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Loading, LoadingController, AlertController, ToastController } from 'ionic-angular';\n\n\nexport class Dialog {\n  constructor(\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    private toastCtrl: ToastController\n  ) { }\n\n  alert(title: string, message: string): void {\n    let alert = this.alertCtrl.create({\n      title: title,\n      message: message,\n      buttons: ['确定']\n    });\n    alert.present();\n  }\n\n  confirm(title: string, message: string, handler: (value: any) => boolean | void) {\n    let alert = this.alertCtrl.create({\n      title: title,\n      message: message,\n      buttons: [{\n        text: '取消',\n        role: 'cancel'\n      }, {\n        text: '确定',\n        handler: handler\n      }]\n    });\n    alert.present();\n  }\n\n  loading(content: string): Loading {\n    return this.loadingCtrl.create({\n      content: content\n    });\n  }\n\n  toast(message: string, position: string = 'top') {\n    let toast = this.toastCtrl.create({\n      message: message,\n      duration: 5000,\n      position: position\n    });\n    toast.present();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LoadingController, },\n{type: AlertController, },\n{type: ToastController, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}