{"version":3,"sources":["config.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAK,CAAA,MAAO,QAAA,CAAS;AAC5B,OAAO,EAAE,WAAA,EAAa,UAAA,EAAW,MAAO,eAAA,CAAgB;AAqBxD,IAAM,aAAA,GAAwB;IAC5B,OAAO,EAAE,KAAA;IACT,YAAY,EAAE;QACZ,SAAS,EAAE,UAAA,CAAE,IAAK,CAAA;KACnB;IACD,WAAW,EAAE;QACX,cAAc,EAAE,IAAA;QAChB,cAAc,EAAE,SAAA;QAChB,gBAAgB,EAAE,WAAA;QAClB,OAAO,EAAE,OAAA;QACT,KAAK,EAAE,MAAA;QACP,MAAM,EAAE,MAAA;QACR,MAAM,EAAE,IAAA;QACR,kBAAkB,EAAE,oBAAA;QACpB,WAAW,EAAE,CAAA;QACb,YAAY,EAAE,CAAA,CAAE;QAChB,WAAW,EAAE,CAAA,CAAE;QACf,eAAe,EAAE,KAAA;QACjB,qBAAqB,EAAE,KAAA;KACxB;IACD,QAAQ,EAAE;QACR,OAAO,EAAE,IAAA;QACT,SAAS,EAAE,IAAA;QACX,YAAY,EAAE,IAAA;QACd,qBAAqB,EAAE,IAAA;QACvB,IAAI,EAAE,EAAA;QACN,IAAI,EAAE,IAAA;QACN,IAAI,EAAE;YACJ,OAAO,EAAE,KAAA;SACV;KACF;CACF,CAAC;AAGF;IAAA;IAgBA,CAAC;IAbC,4BAAG,GAAH;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,6BAAI,GAAJ,UAAK,MAAc;QACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,aAAa,gBAAQ,aAAa,EAAK,MAAM,CAAE,CAAC;IACzF,CAAC;IAOH,qBAAC;AAAD,CAhBA,AAgBC;;AANM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAGF,MAAM,sBANsB,UAAY;IAOtC,IANM,MAAA,GAAS,IAAI,cAAA,EAAe,CAAE;IAOpC,MAAM,CANC,IAAC,CAAI,UAAC,CAAU,CAAC;IAOxB,MAAM,CANC,MAAA,CAAO;AAOhB,CAAC;AAED,MAAM,CANC,IAAM,gBAAA,GAAmB,IAAI,WAAA,CAAY,kBAAC,CAAkB,CAAC","file":"config.js","sourceRoot":"","sourcesContent":["import * as _ from 'lodash';\nimport { OpaqueToken, Injectable } from '@angular/core';\n\nimport { OpenUrlModalOptions } from '../components/open-url-modal/open-url-modal-options';\nimport { ImageLoaderOptions } from '../components/image-loader/image-loader-options';\nimport { BaiduMapOptions } from '../components/baidu-map/baidu-map-options';\n\nexport interface LoginConfig {\n  appKey?: string;\n  url?: string;\n}\n\nexport interface Config {\n  color?: string;\n  hotUpdateUrl?: any;\n  devMode?: boolean;\n  login?: LoginConfig;\n  openUrlModal?: OpenUrlModalOptions;\n  imageLoader?: ImageLoaderOptions;\n  baiduMap?: BaiduMapOptions;\n}\n\nconst defaultConfig: Config = {\n  devMode: false,\n  openUrlModal: {\n    onmessage: (e) => { }\n  },\n  imageLoader: {\n    spinnerEnabled: true,\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    useImg: true,\n    cacheDirectoryName: 'image-loader-cache',\n    concurrency: 5,\n    maxCacheSize: -1,\n    maxCacheAge: -1,\n    imageReturnType: 'uri',\n    fallbackAsPlaceholder: false\n  },\n  baiduMap: {\n    navCtrl: true,\n    scaleCtrl: true,\n    overviewCtrl: true,\n    enableScrollWheelZoom: true,\n    zoom: 10,\n    city: '武汉',\n    mass: {\n      enabled: false\n    }\n  }\n};\n\n\nexport class ConfigProvider {\n  private _config: Config;\n\n  get(): Config {\n    return this._config;\n  }\n\n  init(config: Config) {\n    this._config = _.isUndefined(config) ? defaultConfig : { ...defaultConfig, ...config };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nexport function setupConfig(userConfig: Config): Config {\n  const conifg = new ConfigProvider();\n  conifg.init(userConfig);\n  return conifg;\n}\n\nexport const EXT_IONIC_CONFIG = new OpaqueToken('EXT_IONIC_CONFIG');\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}