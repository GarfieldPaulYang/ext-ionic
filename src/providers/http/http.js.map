{"version":3,"sources":["http.ts"],"names":[],"mappings":"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","file":"http.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  Http,\n  Request,\n  Response,\n  RequestOptionsArgs,\n  ResponseContentType,\n  RequestMethod,\n  RequestOptions,\n  URLSearchParams,\n  Headers\n} from '@angular/http';\nimport { Events, Loading } from 'ionic-angular';\nimport { Device } from '@ionic-native/device';\nimport * as _ from 'lodash';\n\nimport { ConfigProvider } from '../../config/config';\nimport { Dialog } from '../../utils/dialog';\nimport { isPresent } from '../../utils/util';\nimport { ResponseResult } from '../../utils/http/response/response-result';\nimport { URLParamsBuilder } from '../../utils/http/url-params-builder';\nimport { StringUtils } from '../../utils/string';\nimport { JsonFileStorage } from '../storage/json-file-storage';\nimport { MemoryStorage } from '../storage/mem-storage';\n\nexport const ticket_expired: string = 'ticket-expired';\n\nexport interface HttpProviderOptionsArgs extends RequestOptionsArgs {\n  showLoading?: boolean;\n  loadingContent?: string;\n  showErrorAlert?: boolean;\n  cache?: boolean;\n  cacheOnly?: boolean;\n  memCache?: boolean;\n  maxCacheAge?: number;\n}\n\nexport class HttpProviderOptions extends RequestOptions {\n  showLoading: boolean;\n  loadingContent: string;\n  showErrorAlert: boolean;\n  cache: boolean;\n  cacheOnly: boolean;\n  memCache: boolean;\n  maxCacheAge: number;\n\n  constructor(options: HttpProviderOptionsArgs) {\n    super(options);\n\n    this.showLoading = options.showLoading;\n    this.loadingContent = options.loadingContent;\n    this.showErrorAlert = options.showErrorAlert;\n    this.cache = options.cache;\n    this.cacheOnly = options.cacheOnly;\n    this.memCache = options.memCache;\n    this.maxCacheAge = options.maxCacheAge;\n  }\n\n  merge(options?: HttpProviderOptionsArgs): HttpProviderOptions {\n    let result = <HttpProviderOptions>super.merge(options);\n\n    result.showLoading = isPresent(options.showLoading) ? options.showLoading : this.showLoading;\n    result.showErrorAlert = isPresent(options.showErrorAlert) ? options.showErrorAlert : this.showErrorAlert;\n    result.loadingContent = options.loadingContent ? options.loadingContent : this.loadingContent;\n    result.cache = isPresent(options.cache) ? options.cache : this.cache;\n    result.cacheOnly = isPresent(options.cacheOnly) ? options.cacheOnly : this.cacheOnly;\n    result.memCache = isPresent(options.memCache) ? options.memCache : this.memCache;\n    result.maxCacheAge = isPresent(options.maxCacheAge) ? options.maxCacheAge : this.maxCacheAge;\n\n    return result;\n  }\n}\n\nconst HTTP_CACHE_DIR = 'whc';\n\nconst defaultRequestOptions: HttpProviderOptions = new HttpProviderOptions({\n  showLoading: true,\n  loadingContent: '正在加载...',\n  showErrorAlert: true,\n  cache: false,\n  cacheOnly: false,\n  memCache: false,\n  maxCacheAge: 1000 * 60 * 60 * 12,\n  method: RequestMethod.Get,\n  responseType: ResponseContentType.Json\n});\n\nexport interface LoginOptions {\n  username: string;\n  password: string;\n  appId?: string;\n  jpushId?: string;\n}\n\nexport interface SubAcount {\n  type?: string;\n  name?: string;\n  password?: string;\n}\n\nexport interface LoginResult {\n  successToken?: string;\n  subAccounts?: Array<SubAcount>;\n}\n\nconst APP_JSON_TYPE = 'application/json';\n\n\nexport class HttpProvider {\n  constructor(\n    private _http: Http,\n    private jsonCache: JsonFileStorage,\n    private memCache: MemoryStorage,\n    private config: ConfigProvider,\n    private dialog: Dialog\n  ) { }\n\n  get http(): Http {\n    return this._http;\n  }\n\n  requestWithError<T>(\n    url: string,\n    options?: HttpProviderOptionsArgs,\n    foundCacheCallback: (result: T) => void = (result: T) => { }\n  ): Promise<T> {\n    options = options ? defaultRequestOptions.merge(options) : defaultRequestOptions;\n\n    let cache = options.memCache ? this.memCache : this.jsonCache;\n\n    let innerRequest = (url: string, options?: HttpProviderOptionsArgs): Promise<T> => {\n      return this.request<T>(url, options).then((result: ResponseResult<T>) => {\n        if (result.status === 1) {\n          if (options.showErrorAlert) {\n            this.dialog.alert('系统提示', result.msg);\n          }\n          if (isPresent(result.data) && !_.isEqual({}, result.data)) {\n            return Promise.reject(result);\n          }\n          return Promise.reject(result.msg);\n        }\n\n        if (options.cache && options.method === RequestMethod.Get && cacheKey) {\n          cache.save({ dirname: HTTP_CACHE_DIR, filename: cacheKey, content: result.data });\n        }\n\n        return result.data;\n      }).catch(err => {\n        return Promise.reject(err);\n      });\n    };\n\n    let cacheKey;\n    if (options.cache && options.method === RequestMethod.Get) {\n      cacheKey = this.hashUrl(url, <URLSearchParams>(options.params || options.search));\n\n      if (options.cacheOnly) {\n        return cache.load<T>(\n          { dirname: HTTP_CACHE_DIR, filename: cacheKey, maxAge: options.maxCacheAge }\n        ).catch(() => { return innerRequest(url, options); });\n      }\n\n      cache.load<T>({ dirname: HTTP_CACHE_DIR, filename: cacheKey }).then(result => {\n        foundCacheCallback(result);\n      }).catch(error => console.log(error));\n    }\n\n    return innerRequest(url, options);\n  }\n\n  request<T>(url: string, options?: HttpProviderOptionsArgs): Promise<ResponseResult<T>> {\n    options = options || defaultRequestOptions;\n    let loading: Loading;\n    if (options.showLoading) {\n      loading = this.dialog.loading(options.loadingContent);\n      loading.present();\n    }\n    return this.ajax(url, options).toPromise().then(result => {\n      if (loading) loading.dismiss();\n      return result;\n    }).catch(err => {\n      if (loading) loading.dismiss();\n      return Promise.reject(err);\n    });\n  }\n\n  ajax<T>(url: string | Request, options?: HttpProviderOptionsArgs): Observable<ResponseResult<T>> {\n    options = options || defaultRequestOptions;\n    let params = URLParamsBuilder.build({ '__cors-request__': true });\n    if (options.search) {\n      params.replaceAll(<URLSearchParams>options.search);\n    }\n    if (options.params) {\n      params.replaceAll(<URLSearchParams>options.params);\n    }\n    options.params = params;\n\n    if (options.method === RequestMethod.Post) {\n      options.body = options.body || {};\n      options.headers = options.headers || new Headers();\n\n      let contentType = options.headers.get('Content-Type');\n      if (!contentType) {\n        contentType = APP_JSON_TYPE;\n        options.headers.set('Content-Type', contentType);\n      }\n\n      if (!_.isString(options.body) && !(options.body instanceof FormData)) {\n        if (APP_JSON_TYPE === contentType.toLowerCase()) {\n          options.body = JSON.stringify(options.body);\n        } else {\n          options.body = URLParamsBuilder.build(options.body).toString();\n        }\n      }\n    }\n\n    return this.http.request(url, options).map(\n      (r: Response) => new ResponseResult<T>(r.json())\n    );\n  }\n\n  private hashUrl(url: string, params: URLSearchParams): string {\n    let q = params ? params.toString() : '';\n    return StringUtils.hash(url + q).toString();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n{type: JsonFileStorage, },\n{type: MemoryStorage, },\n{type: ConfigProvider, },\n{type: Dialog, },\n];\n}\n\n\nexport class CorsHttpProvider {\n  private _ticket: string = null;\n\n  get ticket(): string {\n    return this._ticket;\n  }\n\n  set ticket(t: string) {\n    this._ticket = t;\n  }\n\n  get httpProvider(): HttpProvider {\n    return this.http;\n  }\n\n  constructor(\n    private http: HttpProvider,\n    private events: Events,\n    private config: ConfigProvider,\n    private device: Device\n  ) { }\n\n  login(options: LoginOptions): Promise<LoginResult> {\n    return this.request<LoginResult>(this.config.get().login.url, {\n      headers: new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        '__login__': 'true',\n        '__uuid__': this.device.uuid,\n        '__model__': this.device.model\n      }),\n      method: RequestMethod.Post,\n      showErrorAlert: false,\n      body: options\n    });\n  }\n\n  logout(): Promise<string> {\n    return this.request<string>(this.config.get().login.url, {\n      cache: false,\n      headers: new Headers({\n        '__logout__': 'true'\n      })\n    }).then(result => {\n      this.ticket = null;\n      return result;\n    });\n  }\n\n  request<T>(\n    url: string,\n    options?: HttpProviderOptionsArgs,\n    foundCacheCallback: (result: T) => void = (result: T) => { }\n  ): Promise<T> {\n    options = options || {};\n    options.headers = options.headers || new Headers();\n\n    options.headers.set('__app-key__', this.config.get().login.appKey);\n    options.headers.set('__dev-mode__', this.config.get().devMode + '');\n    options.headers.set('__ticket__', this.ticket);\n\n    return this.http.requestWithError<T>(url, options, foundCacheCallback).then(result => {\n      return result;\n    }).catch(err => {\n      if (err && _.isString(err) && err.toString() === ticket_expired) {\n        this.events.publish(ticket_expired);\n      }\n      return Promise.reject(err);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpProvider, },\n{type: Events, },\n{type: ConfigProvider, },\n{type: Device, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}