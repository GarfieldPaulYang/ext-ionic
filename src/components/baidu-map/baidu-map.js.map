{"version":3,"sources":["baidu-map.ts"],"names":[],"mappings":"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","file":"baidu-map.js","sourceRoot":"","sourcesContent":["// 封装参考官方API，http://developer.baidu.com/map/reference/index.php\nimport { Injectable, EventEmitter } from '@angular/core';\n\nimport { baiduMapLoader } from './baidu-map-loader';\nimport {\n  BaiduMapOptions,\n  GpsPoint,\n  MarkerOptions,\n  PointCollectionOptions\n} from './baidu-map-options';\n\nexport var BMap: any;\nvar BMAP_STATUS_SUCCESS: any;\nvar BMAP_POINT_SIZE_SMALL: any;\nvar BMAP_POINT_SHAPE_CIRCLE: any;\n\n\nexport class BaiduMapController {\n  private map: any;\n\n  init(opts?: BaiduMapOptions, ele?: HTMLElement): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      baiduMapLoader().then(() => {\n        this.initDeclarations();\n\n        if (!ele || !opts) {\n          resolve();\n          return;\n        }\n\n        this.map = new BMap.Map(ele);\n        setTimeout(() => {\n          this.map.centerAndZoom(new BMap.Point(opts.center.lng, opts.center.lat), opts.zoom);\n          if (opts.navCtrl) {\n            this.map.addControl(new BMap.NavigationControl());\n          }\n          if (opts.scaleCtrl) {\n            this.map.addControl(new BMap.ScaleControl());\n          }\n          if (opts.overviewCtrl) {\n            this.map.addControl(new BMap.OverviewMapControl());\n          }\n          if (opts.enableScrollWheelZoom) {\n            this.map.enableScrollWheelZoom();\n          }\n          this.map.setCurrentCity(opts.city);\n          resolve();\n        });\n      }, reject);\n    });\n  }\n\n  translateGps(gpsData: Array<GpsPoint> = []): Promise<any> {\n    return new Promise<any>(resolve => {\n      let points: Array<any> = [];\n      gpsData.forEach((value, index) => {\n        points.push(new BMap.Point(value.lng, value.lat));\n      });\n\n      let convertor = new BMap.Convertor();\n      convertor.translate(points, 1, 5, resolve);\n    });\n  }\n\n  geoLocation(): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      let location = new BMap.Geolocation();\n      location.getCurrentPosition((result: any) => {\n        if (location.getStatus() === BMAP_STATUS_SUCCESS) {\n          resolve(result);\n        } else {\n          reject('不能获取位置');\n        }\n      }, () => {\n        reject('定位失败');\n      });\n    });\n  }\n\n  clearOverlays() {\n    this.map.clearOverlays();\n  }\n\n  panTo(point: any) {\n    this.map.panTo(point);\n  }\n\n  geoLocationAndCenter(): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.geoLocation().then(result => {\n        this.panTo(result.point);\n        resolve(result);\n      }, () => reject('定位失败'));\n    });\n  }\n\n  addEventListener(event: string, handler: EventEmitter<any>) {\n    this.map.addEventListener(event, (e: any) => {\n      handler.emit(e);\n    });\n  }\n\n  addMarker(markerOpts: MarkerOptions, clickHandler: EventEmitter<any>) {\n    let marker = this.createMarker(markerOpts);\n    let infoWindow = this.createInfoWindow(markerOpts);\n    if (infoWindow) {\n      marker.addEventListener('click', (e: any) => {\n        marker.openInfoWindow(infoWindow);\n      });\n    } else {\n      marker.addEventListener('click', (e: any) => {\n        clickHandler.emit(e);\n      });\n    }\n    this.map.addOverlay(marker);\n  }\n\n  drawMarkers(markers: Array<MarkerOptions>, clickHandler: EventEmitter<any>): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      setTimeout(() => {\n        // 判断是否含有定位点\n        if (!markers || markers.length === 0) {\n          reject('没有传入兴趣点');\n          return;\n        }\n\n        this.clearOverlays();\n        markers.forEach(marker => {\n          this.addMarker(marker, clickHandler);\n        });\n        resolve();\n      });\n    });\n  }\n\n  drawMassPoints(markers: Array<MarkerOptions>, opts: PointCollectionOptions, clickHandler: EventEmitter<any>): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      setTimeout(() => {\n        if (!markers || markers.length === 0) {\n          reject('没有传入兴趣点');\n          return;\n        }\n\n        this.clearOverlays();\n\n        var points: Array<any> = [];\n        markers.forEach(marker => {\n          points.push(new BMap.Point(marker.point.lng, marker.point.lat));\n        });\n\n        var pointCollection = new BMap.PointCollection(points, {\n          size: BMAP_POINT_SIZE_SMALL,\n          shape: BMAP_POINT_SHAPE_CIRCLE,\n          color: '#d340c3',\n          ...opts\n        });\n        pointCollection.addEventListener('click', (e: any) => {\n          clickHandler.emit(e);\n        });\n        this.map.addOverlay(pointCollection);\n        resolve();\n      });\n    });\n  }\n\n  private initDeclarations() {\n    BMap = window['BMap'];\n    BMAP_STATUS_SUCCESS = window['BMAP_STATUS_SUCCESS'];\n    BMAP_POINT_SIZE_SMALL = window['BMAP_POINT_SIZE_SMALL'];\n    BMAP_POINT_SHAPE_CIRCLE = window['BMAP_POINT_SHAPE_CIRCLE'];\n  }\n\n  private createIcon(marker: MarkerOptions): any {\n    if (marker.icon) {\n      if (marker.size) {\n        return new BMap.Icon(marker.icon, new BMap.Size(marker.size.width, marker.size.height));\n      }\n      return new BMap.Icon(marker.icon);\n    }\n\n    return null;\n  }\n\n  private createInfoWindow(marker: MarkerOptions): any {\n    if (marker.infoWindow) {\n      var msg = '<p>' + marker.infoWindow.title + '</p><p>' + marker.infoWindow.content + '</p>';\n      return new BMap.InfoWindow(msg, {\n        enableMessage: !!marker.infoWindow.enableMessage,\n        enableCloseOnClick: true\n      });\n    }\n\n    return null;\n  }\n\n  private createMarker(marker: MarkerOptions): any {\n    var icon = this.createIcon(marker);\n    var pt = new BMap.Point(marker.point.lng, marker.point.lat);\n    if (icon) {\n      return new BMap.Marker(pt, { icon: icon });\n    }\n    return new BMap.Marker(pt);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}