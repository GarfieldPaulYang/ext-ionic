{"version":3,"sources":["ribbon.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,KAAA,EAAe,uBAAA,EAAyB,QAAA,EAAS,MAAO,eAAA,CAAgB;AACxG,OAAO,EAAE,SAAA,EAAU,MAAO,kBAAA,CAAmB;AAW7C;IAQE,gBAAoB,QAAkB,EAAU,UAAsB;QAAlD,aAAQ,GAAR,QAAQ,CAAU;QAAU,eAAU,GAAV,UAAU,CAAY;IACtE,CAAC;IAED,yBAAQ,GAAR;QACE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,OAAO,CAAC;QAC9C,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,KAAK,CAAC;QACxC,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC;QACpC,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;QACxF,IAAI,CAAC,eAAe,GAAG,EAAE,SAAS,EAAE,MAAM,GAAG,IAAI,GAAG,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,UAAU,EAAE,MAAM,GAAG,IAAI,GAAG,sBAAsB,EAAE,CAAC;QACtJ,IAAI,CAAC,gBAAgB,GAAG,EAAE,SAAS,EAAE,MAAM,GAAG,GAAG,GAAG,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,UAAU,EAAE,MAAM,GAAG,GAAG,GAAG,sBAAsB,EAAE,CAAC;QACzJ,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,MAAM,GAAG,IAAI,GAAG,IAAI,EAAE,KAAK,EAAE,GAAG,GAAG,MAAM,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC;QAC7I,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC3D,CAAC;IACH,CAAC;IAuBH,aAAC;AAAD,CApDA,AAoDC;;AAtBM,iBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE,iSAOT;gBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,qBAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAH6F,CAG7F,CAAC;AACK,qBAAc,GAA2C;IAChE,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAE;CAC5D,CAAC","file":"ribbon.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, Input, OnInit, ChangeDetectionStrategy, Renderer } from '@angular/core';\nimport { isPresent } from '../../utils/util';\n\nexport interface RibbnOptions {\n  backgroundColor: string;\n  ribbonColor: string;\n  ribbonText: string;\n  fontSize: string;\n  heightAmend: number;\n}\n\n\nexport class Ribbon implements OnInit {\n  riangleStyleOne: any;\n  triangleStyleTwo: any;\n  textStyle: any;\n\n  \n  ribbonOption: RibbnOptions;\n\n  constructor(private renderer: Renderer, private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {\n    if (!isPresent(this.ribbonOption.backgroundColor)) {\n      this.ribbonOption.backgroundColor = 'white';\n    }\n    if (!isPresent(this.ribbonOption.ribbonColor)) {\n      this.ribbonOption.ribbonColor = 'red';\n    }\n    if (!isPresent(this.ribbonOption.heightAmend)) {\n      this.ribbonOption.heightAmend = 0;\n    }\n    this.renderer.setElementClass(this.elementRef.nativeElement, 'ribbon-bar', true);\n    let height = this.elementRef.nativeElement.offsetHeight + this.ribbonOption.heightAmend;\n    this.riangleStyleOne = { borderTop: height * 0.52 + 'px solid ' + this.ribbonOption.ribbonColor, borderLeft: height * 0.52 + 'px solid transparent' };\n    this.triangleStyleTwo = { borderTop: height * 0.2 + 'px solid ' + this.ribbonOption.backgroundColor, borderLeft: height * 0.2 + 'px solid transparent' };\n    this.textStyle = { width: height * 0.52 + 'px', height: height * 0.23 + 'px', top: height * 0.07 + 'px', right: '-' + height * 0.09 + 'px' };\n    if (isPresent(this.ribbonOption.fontSize)) {\n      this.textStyle['font-size'] = this.ribbonOption.fontSize;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: '[ribbon]',\n  template: `\n    <div class=\"triangle\" [ngStyle]=\"riangleStyleOne\"></div>\n    <div class=\"triangle\" [ngStyle]=\"triangleStyleTwo\"></div>\n    <div class=\"ribbon-text-box\" [ngStyle]=\"textStyle\">\n      <div>{{ribbonOption.ribbonText}}</div>\n    </div>\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ribbonOption': [{ type: Input, args: ['ribbon-option', ] },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}