{"version":3,"sources":["image-loader-component.ts"],"names":[],"mappings":"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","file":"image-loader-component.js","sourceRoot":"","sourcesContent":["import { Component, Input, ElementRef, Renderer, OnInit, Output, EventEmitter } from '@angular/core';\nimport { isTrueProperty } from '../../utils/util';\nimport * as _ from 'lodash';\n\nimport { ImageLoaderController } from './image-loader';\nimport { ConfigProvider } from '../../config/config';\n\n\nexport class ImageLoaderCmp implements OnInit {\n  private _src: string;\n\n  \n  set src(imageUrl: string) {\n    this._src = this.processImageUrl(imageUrl);\n    this.updateImage(this._src);\n  };\n\n  get src(): string {\n    return this._src;\n  }\n\n   cache: boolean = true;\n   fallbackUrl: string = this.config.get().imageLoader.fallbackUrl;\n   spinner: boolean = this.config.get().imageLoader.spinnerEnabled;\n   fallbackAsPlaceholder: boolean = this.config.get().imageLoader.fallbackAsPlaceholder;\n   useImg: boolean = this.config.get().imageLoader.useImg;\n   width: string = this.config.get().imageLoader.width;\n   height: string = this.config.get().imageLoader.height;\n   display: string = this.config.get().imageLoader.display;\n   backgroundSize: string = this.config.get().imageLoader.backgroundSize;\n   backgroundRepeat: string = this.config.get().imageLoader.backgroundRepeat;\n   spinnerName: string = this.config.get().imageLoader.spinnerName;\n   spinnerColor: string = this.config.get().imageLoader.spinnerColor;\n\n  \n  load: EventEmitter<ImageLoaderCmp> = new EventEmitter<ImageLoaderCmp>();\n\n  isLoading: boolean = true;\n\n  private element: HTMLElement;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer,\n    private imageLoader: ImageLoaderController,\n    private config: ConfigProvider\n  ) { }\n\n  ngOnInit(): void {\n    this.useImg = isTrueProperty(this.useImg);\n    this.cache = isTrueProperty(this.cache);\n    this.fallbackAsPlaceholder = isTrueProperty(this.fallbackAsPlaceholder);\n\n    if (this.fallbackAsPlaceholder && this.fallbackUrl) {\n      this.setImage(this.fallbackUrl, false);\n    }\n\n    if (!this.src) {\n      if (!this.fallbackAsPlaceholder && this.fallbackUrl) {\n        this.setImage(this.fallbackUrl);\n        return;\n      }\n      this.isLoading = false;\n    }\n  }\n\n  private processImageUrl(imageUrl: string): string {\n    if (this.cache === false) {\n      if (imageUrl.indexOf('?') === -1) {\n        imageUrl += '?';\n      }\n\n      if (['&', '?'].indexOf(imageUrl.charAt(imageUrl.length)) === -1) {\n        imageUrl += '&';\n      }\n\n      imageUrl += 'cache_buster=' + Date.now();\n    }\n\n    return imageUrl;\n  }\n\n  private updateImage(imageUrl: string) {\n    this.imageLoader.getImagePath(imageUrl).then((imageUrl: string) => this.setImage(imageUrl))\n      .catch((error: any) => this.setImage(this.fallbackUrl || imageUrl));\n  }\n\n  private setImage(imageUrl: string, stopLoading: boolean = true): void {\n    this.isLoading = !stopLoading;\n\n    if (this.useImg) {\n      if (!this.element) {\n        this.element = this.renderer.createElement(this.elementRef.nativeElement, 'img');\n      }\n      this.renderer.listen(this.element, 'error', (event: any) => {\n        this.imageLoader.removeCacheFile(imageUrl);\n        if (this.fallbackUrl) {\n          this.renderer.setElementAttribute(this.element, 'src', this.fallbackUrl);\n        }\n      });\n      this.renderer.setElementAttribute(this.element, 'src', imageUrl);\n    } else {\n      this.element = this.elementRef.nativeElement;\n      if (this.display) {\n        this.renderer.setElementStyle(this.element, 'display', this.display);\n      }\n\n      if (this.height) {\n        this.renderer.setElementStyle(this.element, 'height', this.height);\n      }\n\n      if (this.width) {\n        this.renderer.setElementStyle(this.element, 'width', this.width);\n      }\n\n      if (this.backgroundSize) {\n        this.renderer.setElementStyle(this.element, 'background-size', this.backgroundSize);\n      }\n\n      if (this.backgroundRepeat) {\n        this.renderer.setElementStyle(this.element, 'background-repeat', this.backgroundRepeat);\n      }\n\n      this.renderer.setElementStyle(this.element, 'background-image', 'url(\\'' + (imageUrl || this.fallbackUrl) + '\\')');\n    }\n    this.load.emit(this);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ion-image-loader',\n  template: '<ion-spinner *ngIf=\"spinner && isLoading && !fallbackAsPlaceholder\" [name]=\"spinnerName\" [color]=\"spinnerColor\"></ion-spinner>',\n  styles: [`\n    ion-spinner {\n      float: none;\n      display: block;\n      margin: auto;\n    }\n  `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: ImageLoaderController, },\n{type: ConfigProvider, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'src': [{ type: Input },],\n'cache': [{ type: Input },],\n'fallbackUrl': [{ type: Input, args: ['fallback', ] },],\n'spinner': [{ type: Input },],\n'fallbackAsPlaceholder': [{ type: Input },],\n'useImg': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'display': [{ type: Input },],\n'backgroundSize': [{ type: Input },],\n'backgroundRepeat': [{ type: Input },],\n'spinnerName': [{ type: Input },],\n'spinnerColor': [{ type: Input },],\n'load': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}