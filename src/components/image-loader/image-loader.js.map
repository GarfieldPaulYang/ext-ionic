{"version":3,"sources":["image-loader.ts"],"names":[],"mappings":"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","file":"image-loader.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { Transfer } from '@ionic-native/transfer';\nimport { File, FileEntry, Metadata, FileError } from '@ionic-native/file';\n\nimport * as _ from 'lodash';\n\nimport { ConfigProvider } from '../../config/config';\nimport { StringUtils } from '../../utils/string';\n\ninterface IndexItem {\n  name: string;\n  modificationTime: Date;\n  size: number;\n}\n\ninterface QueueItem {\n  imageUrl: string;\n  resolve: Function;\n  reject: Function;\n}\n\n\nexport class ImageLoaderController {\n  private isCacheReady: boolean = false;\n  private isInit: boolean = false;\n  private processing: number = 0;\n  private indexed: boolean = false;\n  private currentCacheSize: number = 0;\n  private queue: QueueItem[] = [];\n  private cacheIndex: IndexItem[] = [];\n\n  constructor(\n    private platform: Platform,\n    private transfer: Transfer,\n    private file: File,\n    private config: ConfigProvider\n  ) {\n    platform.ready().then(() => {\n      if ((<any>File).installed()) {\n        this.initCache();\n      } else {\n        this.isInit = true;\n        this.throwWarning('You are running on a browser or using livereload, IonicImageLoader will not function, falling back to browser loading.');\n      }\n    });\n  }\n\n  preload(imageUrl: string): Promise<string> {\n    return this.getImagePath(imageUrl);\n  }\n\n  clearCache() {\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    const clear = () => {\n      if (!this.isInit) {\n        setTimeout(clear.bind(this), 500);\n        return;\n      }\n\n      this.isInit = false;\n      this.file.removeRecursively(\n        this.cacheRootDirectory,\n        this.cacheDirectoryName\n      ).then(() => {\n        if (this.isWKWebView) {\n          this.file.removeRecursively(\n            this.cacheTempRootDirectory,\n            this.cacheDirectoryName\n          ).catch((error) => {\n            // Noop catch. Removing the tempDirectory might fail,\n            // as it is not persistent.\n          }).then(() => {\n            this.initCache(true);\n          });\n          return;\n        }\n        this.initCache(true);\n      }).catch(this.throwError.bind(this));\n    };\n\n    clear();\n  }\n\n  getImagePath(imageUrl: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (!this.needDownload(imageUrl)) {\n        resolve(imageUrl);\n        return;\n      }\n\n      const getImage = () => {\n        this.getCachedImagePath(imageUrl).then(resolve).catch(() => {\n          this.addItemToQueue(imageUrl, resolve, reject);\n        });\n      };\n\n      const check = () => {\n        if (this.isInit) {\n          if (this.isCacheReady) {\n            getImage();\n            return;\n          }\n          this.throwWarning('The cache system is not running. Images will be loaded by your browser instead.');\n          resolve(imageUrl);\n          return;\n        }\n        setTimeout(() => check(), 250);\n      };\n      check();\n    });\n  }\n\n  removeCacheFile(localPath: string) {\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    if (!this.isCacheReady) {\n      return;\n    }\n\n    if (!localPath) {\n      return;\n    }\n\n    this.removeFile(localPath.substr(localPath.lastIndexOf('/') + 1)).catch(() => {\n      // Noop catch.\n    });\n  }\n\n  private removeFile(file: string): Promise<any> {\n    return this.file.removeFile(this.cacheDirectory, file).then(() => {\n      if (this.isWKWebView) {\n        return this.file.removeFile(this.cacheTempDirectory, file).catch(() => {\n          // Noop catch. Removing the files from tempDirectory might fail, as it is not persistent.\n        });\n      }\n    });\n  }\n\n  private downloadImage(imageUrl: string, localPath: string): Promise<any> {\n    const transfer = this.transfer.create();\n    return transfer.download(imageUrl, localPath, true);\n  }\n\n  private needDownload(imageUrl: string): boolean {\n    return StringUtils.startsWith(imageUrl, [\n      'http://',\n      'https://',\n      'ftp://'\n    ]);\n  }\n\n  private initCache(replace?: boolean): void {\n    this.createCacheDirectory(replace).catch(e => {\n      this.throwError(e);\n      this.isInit = true;\n    }).then(() => this.indexCache()).then(() => {\n      this.isCacheReady = true;\n      this.isInit = true;\n    });\n  }\n\n  private addFileToIndex(file: FileEntry): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      file.getMetadata((metadata: Metadata) => {\n        if (\n          this.config.get().imageLoader.maxCacheAge > -1\n          && (Date.now() - metadata.modificationTime.getTime()) > this.config.get().imageLoader.maxCacheAge\n        ) {\n          return this.removeFile(file.name);\n        }\n\n        this.currentCacheSize += metadata.size;\n        this.cacheIndex.push({\n          name: file.name,\n          modificationTime: metadata.modificationTime,\n          size: metadata.size\n        });\n        resolve();\n      }, (error: FileError) => reject(error));\n    });\n  }\n\n  private indexCache(): Promise<void> {\n    if (!this.shouldIndex) return Promise.resolve();\n\n    this.cacheIndex = [];\n    return this.file.listDir(\n      this.cacheRootDirectory,\n      this.cacheDirectoryName\n    ).then(files => Promise.all(files.map(this.addFileToIndex.bind(this)))).then(() => {\n      this.cacheIndex = _.sortBy(this.cacheIndex, 'modificationTime');\n      this.indexed = true;\n      return Promise.resolve();\n    }).catch(e => {\n      this.throwError(e);\n      return Promise.resolve();\n    });\n  }\n\n  private maintainCacheSize(): void {\n    if (this.config.get().imageLoader.maxCacheSize > -1 && this.indexed) {\n      const maintain = () => {\n        if (this.currentCacheSize > this.config.get().imageLoader.maxCacheSize) {\n          const next: Function = () => {\n            this.currentCacheSize -= file.size;\n            maintain();\n          };\n\n          const file: IndexItem = this.cacheIndex.splice(0, 1)[0];\n          if (typeof file === 'undefined') return maintain();\n\n          this.removeFile(file.name).then(() => next()).catch(() => next());\n        }\n      };\n\n      maintain();\n    }\n  }\n\n  private addItemToQueue(imageUrl: string, resolve, reject): void {\n    this.queue.push({\n      imageUrl,\n      resolve,\n      reject\n    });\n\n    this.processQueue();\n  }\n\n  private get canProcess(): boolean {\n    return this.queue.length > 0 && this.processing < this.config.get().imageLoader.concurrency;\n  }\n\n  private processQueue() {\n    if (!this.canProcess) return;\n\n    this.processing++;\n\n    const currentItem = this.queue.splice(0, 1)[0];\n\n    if (this.canProcess) this.processQueue();\n\n    const done = () => {\n      this.processing--;\n      this.processQueue();\n    };\n\n    const localPath = this.cacheDirectory + '/' + this.createFileName(currentItem.imageUrl);\n    this.downloadImage(currentItem.imageUrl, localPath).then((file: FileEntry) => {\n      if (this.shouldIndex) {\n        this.addFileToIndex(file).then(this.maintainCacheSize.bind(this));\n      }\n      this.getCachedImagePath(currentItem.imageUrl).then((localUrl) => {\n        currentItem.resolve(localUrl);\n        done();\n      });\n    }).catch((e) => {\n      currentItem.reject();\n      this.throwError(e);\n      done();\n    });\n  }\n\n  private getCachedImagePath(url: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (!this.isCacheReady) {\n        return reject();\n      }\n\n      const fileName = this.createFileName(url);\n      this.file.resolveLocalFilesystemUrl(this.cacheDirectory + '/' + fileName).then((fileEntry: FileEntry) => {\n        if (this.config.get().imageLoader.imageReturnType === 'base64') {\n          // read the file as data url and return the base64 string.\n          // should always be successful as the existence of the file\n          // is alreay ensured\n          this.file.readAsDataURL(this.cacheDirectory, fileName).then((base64: string) => {\n            resolve(base64);\n          }).catch(reject);\n          return;\n        }\n\n        // now check if iOS device & using WKWebView Engine.\n        // in this case only the tempDirectory is accessible,\n        // therefore the file needs to be copied into that directory first!\n        if (this.isWKWebView) {\n          // check if file already exists in temp directory\n          this.file.resolveLocalFilesystemUrl(this.cacheTempDirectory + '/' + fileName).then((tempFileEntry: FileEntry) => {\n            // file exists in temp directory\n            // return native path\n            resolve(tempFileEntry.nativeURL);\n          }).catch(() => {\n            // file does not yet exist in the temp directory.\n            // copy it!\n            this.file.copyFile(this.cacheDirectory, fileName, this.cacheTempDirectory, fileName).then((tempFileEntry: FileEntry) => {\n              // now the file exists in the temp directory\n              // return native path\n              resolve(tempFileEntry.nativeURL);\n            }).catch(reject);\n          });\n        } else {\n          // return native path\n          resolve(fileEntry.nativeURL);\n        }\n      }).catch(reject);\n    });\n  }\n\n  private throwError(...args: any[]): void {\n    args.unshift('ImageLoader Error: ');\n    console.error.apply(console, args);\n  }\n\n  private throwWarning(...args: any[]): void {\n    args.unshift('ImageLoader Warning: ');\n    console.warn.apply(console, args);\n  }\n\n  private get isWKWebView(): boolean {\n    return this.platform.is('ios') && (<any>window).webkit;\n  }\n\n  private cacheDirectoryExists(directory: string): Promise<boolean> {\n    return this.file.checkDir(directory, this.cacheDirectoryName);\n  }\n\n  private get cacheRootDirectory(): string {\n    return this.file.cacheDirectory;\n  }\n\n  private get cacheTempRootDirectory(): string {\n    return this.file.tempDirectory;\n  }\n\n  private get cacheDirectoryName(): string {\n    return this.config.get().imageLoader.cacheDirectoryName;\n  }\n\n  private get cacheDirectory(): string {\n    return this.cacheRootDirectory + this.cacheDirectoryName;\n  }\n\n  private get cacheTempDirectory(): string {\n    return this.cacheTempRootDirectory + this.cacheDirectoryName;\n  }\n\n  private get shouldIndex() {\n    return (this.config.get().imageLoader.maxCacheAge > -1) || (this.config.get().imageLoader.maxCacheSize > -1);\n  }\n\n  private createCacheDirectory(replace: boolean = false): Promise<any> {\n    let cacheDirectoryPromise: Promise<any>, tempDirectoryPromise: Promise<any>;\n\n    if (replace) {\n      // create or replace the cache directory\n      cacheDirectoryPromise = this.file.createDir(this.cacheRootDirectory, this.cacheDirectoryName, replace);\n    } else {\n      // check if the cache directory exists.\n      // if it does not exist create it!\n      cacheDirectoryPromise = this.cacheDirectoryExists(this.cacheRootDirectory).catch(\n        () => this.file.createDir(this.cacheRootDirectory, this.cacheDirectoryName, false)\n      );\n    }\n\n    if (this.isWKWebView) {\n      if (replace) {\n        // create or replace the temp directory\n        tempDirectoryPromise = this.file.createDir(this.cacheTempRootDirectory, this.cacheDirectoryName, replace);\n      } else {\n        // check if the temp directory exists.\n        // if it does not exist create it!\n        tempDirectoryPromise = this.cacheDirectoryExists(this.cacheTempRootDirectory).catch(\n          () => this.file.createDir(this.cacheTempRootDirectory, this.cacheDirectoryName, false)\n        );\n      }\n    } else {\n      tempDirectoryPromise = Promise.resolve();\n    }\n\n    return Promise.all([cacheDirectoryPromise, tempDirectoryPromise]);\n  }\n\n  private createFileName(url: string): string {\n    return StringUtils.hash(url).toString();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Platform, },\n{type: Transfer, },\n{type: File, },\n{type: ConfigProvider, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}