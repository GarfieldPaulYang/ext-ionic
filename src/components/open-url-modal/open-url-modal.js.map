{"version":3,"sources":["open-url-modal.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,eAAA,EAAqC,MAAO,eAAA,CAAgB;AAGrE,OAAO,EAAE,cAAA,EAAe,MAAO,qBAAA,CAAsB;AAGrD,OAAO,EAAE,eAAA,EAAgB,MAAO,4BAAA,CAA6B;AAG7D;IAIE,gCAAoB,SAA0B,EAAU,MAAsB;QAA1D,cAAS,GAAT,SAAS,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAgB;QAHtE,YAAO,GAAwB,EAAE,CAAC;IAGwC,CAAC;IAEnF,qCAAI,GAAJ,UAAK,IAA8B,EAAE,SAA4B;QAA5D,qBAAA,EAAA,SAA8B;QAAE,0BAAA,EAAA,cAA4B;QAC/D,IAAI,CAAC,OAAO,gBAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,YAAY,EAAK,IAAI,CAAE,CAAC;QAE9D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC;QAC9F,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAC,IAAS;YAChC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED,sCAAK,GAAL;QACE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IASH,6BAAC;AAAD,CA3BA,AA2BC;;AARM,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,qCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,cAAc,GAAG;CACvB,EAH6F,CAG7F,CAAC","file":"open-url-modal.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ModalController, ModalOptions, Modal } from 'ionic-angular';\nimport * as _ from 'lodash';\n\nimport { ConfigProvider } from '../../config/config';\n\nimport { OpenUrlModalOptions } from './open-url-modal-options';\nimport { OpenUrlModalCmp } from './open-url-modal-component';\n\n\nexport class OpenUrlModalController {\n  private options: OpenUrlModalOptions = {};\n  private modal: Modal;\n\n  constructor(private modalCtrl: ModalController, private config: ConfigProvider) { }\n\n  open(opts: OpenUrlModalOptions = {}, modalOpts: ModalOptions = {}) {\n    this.options = { ...this.config.get().openUrlModal, ...opts };\n\n    this.modal = this.modalCtrl.create(OpenUrlModalCmp, { openUrlModalOptions: opts }, modalOpts);\n    this.modal.onDidDismiss((data: any) => {\n      window.removeEventListener('message', data.onmessage, false);\n    });\n    this.modal.present();\n  }\n\n  close() {\n    this.modal.dismiss(this.options);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ModalController, },\n{type: ConfigProvider, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}