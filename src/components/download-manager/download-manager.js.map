{"version":3,"sources":["download-manager.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAA,EAAY,YAAA,EAAc,MAAA,EAAO,MAAO,eAAA,CAAgB;AACjE,OAAO,EAAE,QAAA,EAAwB,MAAO,eAAA,CAAgB;AACxD,OAAO,EAAE,QAAA,EAAS,MAAO,wBAAA,CAAyB;AAClD,OAAO,EAAE,IAAA,EAAK,MAAO,oBAAA,CAAqB;AAC1C,OAAO,EAAE,qBAAA,EAAsB,MAAO,kCAAA,CAAmC;AACzE,OAAO,EAAE,SAAA,EAAU,MAAO,kBAAA,CAAmB;AAC7C,OAAO,EAAE,kBAAA,EAAmB,MAAO,8BAAA,CAA+B;AAelE;IAcE,mCACU,QAAkB,EAClB,QAAkB,EAClB,IAAU,EACV,kBAAyC,EACzC,MAAc;QAJd,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAAU;QAClB,SAAI,GAAJ,IAAI,CAAM;QACV,uBAAkB,GAAlB,kBAAkB,CAAuB;QACzC,WAAM,GAAN,MAAM,CAAQ;QAlBhB,WAAM,GAAgC,IAAI,YAAY,CAAgB,IAAI,CAAC,CAAC;QAC5E,OAAE,GAAW,GAAG,CAAC;QAEjB,mBAAc,GAAW,WAAW,CAAC;QAiB3C,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,mCAAmC,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACpI,CAAC;IACH,CAAC;IAlBD,sBAAI,4CAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;;;OAAA;IAED,sBAAI,wDAAiB;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;QACpD,CAAC;;;OAAA;IAcD,wCAAI,GAAJ,UAAK,OAAsB;QACzB,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACnC,CAAC;IAED,4CAAQ,GAAR,UAAS,MAAuB;QAAhC,iBA8CC;QA7CC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;QACvB,CAAC;QACD,IAAI,QAAQ,GAAG,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;QACxD,IAAI,cAAsB,CAAC;QAC3B,IAAI,YAAY,GAAY,KAAK,CAAC;QAClC,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,gBAAgB,GAAW,CAAC,CAAC;QACjC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACtC,QAAQ,CAAC,UAAU,CAAC,UAAA,KAAK;YACvB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,KAAK,GAAG,KAAK,CAAC;gBACd,YAAY,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC/C,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAA,EAAE;wBAC9C,cAAc,GAAG,EAAE,CAAC;oBACtB,CAAC,CAAC,CAAC;gBACL,CAAC;gBACD,MAAM,CAAC;YACT,CAAC;YACD,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;YAC9D,EAAE,CAAC,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC;gBAChC,gBAAgB,GAAG,QAAQ,CAAC;gBAC5B,EAAE,CAAC,CAAC,YAAY,IAAI,cAAc,CAAC,CAAC,CAAC;oBACnC,KAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,QAAQ,EAAE,cAAc,EAAE,QAAQ,CAAC,CAAC;gBAC1E,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACd,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;wBACf,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,MAAM,CAAC,QAAQ;wBACzB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,KAAK;YAChE,EAAE,CAAC,CAAC,YAAY,IAAI,cAAc,CAAC,CAAC,CAAC;gBACnC,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAChD,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,4CAAQ,GAAhB;QAAA,iBAQC;QAPC,IAAI,CAAC,EAAE,EAAE,CAAC;QACV,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAA,WAAW;YAClE,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,KAAI,CAAC,QAAQ,EAAE,CAAC;YACzB,CAAC;YAAA,CAAC;YACF,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,sDAAkB,GAA1B,UAA2B,QAAgB;QAA3C,iBAWC;QAVC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,EAAE;YAC5B,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;gBAC/B,EAAE,EAAE,EAAE;gBACN,KAAK,EAAE,QAAQ,GAAG,UAAU;gBAC5B,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;gBACrC,WAAW,EAAE,GAAG;gBAChB,eAAe,EAAE,CAAC;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,2DAAuB,GAA/B,UAAgC,QAAgB,EAAE,EAAU,EAAE,QAAgB;QAC5E,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;YAC7B,EAAE,EAAE,EAAE;YACN,KAAK,EAAE,QAAQ,GAAG,QAAQ;YAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;YACrC,WAAW,EAAE,GAAG;YAChB,eAAe,EAAE,QAAQ;YACzB,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;IACL,CAAC;IAYH,gCAAC;AAAD,CA1HA,AA0HC;;AAXM,oCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,wCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,IAAI,GAAG;IACd,EAAC,IAAI,EAAE,qBAAqB,GAAG;IAC/B,EAAC,IAAI,EAAE,MAAM,GAAG;CACf,EAN6F,CAM7F,CAAC","file":"download-manager.js","sourceRoot":"","sourcesContent":["\nimport { Injectable, EventEmitter, NgZone } from '@angular/core';\nimport { Platform, NavController } from 'ionic-angular';\nimport { Transfer } from '@ionic-native/transfer';\nimport { File } from '@ionic-native/file';\nimport { ExtLocalNotifications } from '../../native/local-notifications';\nimport { isPresent } from '../../utils/util';\nimport { DownloadManagerCmp } from './download-manager-component';\n\nexport interface DownloadOptions {\n  fileName: string;\n  filePath?: string;\n  url: string;\n}\n\nexport interface DownloadEvent {\n  fileName: string;\n  filePath: string;\n  progress: number;\n}\n\n\nexport class DownloadManagerController {\n  private _event: EventEmitter<DownloadEvent> = new EventEmitter<DownloadEvent>(true);\n  private id: number = 999;\n  private _fileSystemRoot: string;\n  private _rootDirectory: string = 'download/';\n\n  get event() {\n    return this._event;\n  }\n\n  get downloadDirectory() {\n    return this._fileSystemRoot + this._rootDirectory;\n  }\n\n  constructor(\n    private platform: Platform,\n    private transfer: Transfer,\n    private file: File,\n    private localNotifications: ExtLocalNotifications,\n    private ngZone: NgZone\n  ) {\n    if (platform.is('cordova')) {\n      this._fileSystemRoot = this.platform.is('android') ? this.file.externalApplicationStorageDirectory : this.file.documentsDirectory;\n    }\n  }\n\n  show(navCtrl: NavController) {\n    navCtrl.push(DownloadManagerCmp);\n  }\n\n  download(option: DownloadOptions): Promise<any> {\n    if (!isPresent(option.filePath)) {\n      option.filePath = '';\n    }\n    let filePath = this.downloadDirectory + option.filePath;\n    let notificationId: number;\n    let notification: boolean = false;\n    let first = true;\n    let downloadProgress: number = 0;\n    let transfer = this.transfer.create();\n    transfer.onProgress(event => {\n      if (first) {\n        first = false;\n        notification = event.total > (1024 * 1024 * 5);\n        if (notification) {\n          this.createNotification(option.fileName).then(id => {\n            notificationId = id;\n          });\n        }\n        return;\n      }\n      let progress = Math.round((event.loaded / event.total) * 100);\n      if (progress > downloadProgress) {\n        downloadProgress = progress;\n        if (notification && notificationId) {\n          this.updateLocalNotification(option.fileName, notificationId, progress);\n        }\n        this.ngZone.run(() => {\n          this._event.emit({\n            progress: progress,\n            fileName: option.fileName,\n            filePath: filePath\n          });\n        });\n      }\n    });\n    let target = filePath + option.fileName;\n    if (this.platform.is('ios')) {\n      target = encodeURI(target);\n    }\n    return transfer.download(encodeURI(option.url), target).then(entry => {\n      if (notification && notificationId) {\n        this.localNotifications.clear(notificationId);\n      }\n      return entry;\n    });\n  }\n\n  private createId(): Promise<number> {\n    this.id++;\n    return this.localNotifications.isScheduled(this.id).then(isScheduled => {\n      if (isScheduled) {\n        return this.createId();\n      };\n      return this.id;\n    });\n  }\n\n  private createNotification(fileName: string): Promise<number> {\n    return this.createId().then(id => {\n      this.localNotifications.schedule({\n        id: id,\n        title: fileName + ' 开始下载...',\n        progress: this.platform.is('android'),\n        maxProgress: 100,\n        currentProgress: 0\n      });\n      return id;\n    });\n  }\n\n  private updateLocalNotification(fileName: string, id: number, progress: number) {\n    this.localNotifications.update({\n      id: id,\n      title: fileName + '下载中...',\n      progress: this.platform.is('android'),\n      maxProgress: 100,\n      currentProgress: progress,\n      sound: null\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Platform, },\n{type: Transfer, },\n{type: File, },\n{type: ExtLocalNotifications, },\n{type: NgZone, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}