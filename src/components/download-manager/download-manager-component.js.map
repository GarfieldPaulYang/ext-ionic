{"version":3,"sources":["download-manager-component.ts"],"names":[],"mappings":"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","file":"download-manager-component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, OnDestroy, OnChanges, SimpleChanges, NgZone } from '@angular/core';\nimport { DownloadManagerController, DownloadEvent } from './download-manager';\nimport { File, Entry, DirectoryEntry, DirectoryReader } from '@ionic-native/file';\nimport * as _ from 'lodash';\nimport { isPresent } from '../../utils/util';\n\nexport interface DownloadManager {\n  downloadingList: Array<DownloadEvent>;\n  fileList: Array<Entry>;\n}\n\ninterface FileInfo {\n  fileName: string;\n  filePath: string;\n}\n\n\nexport class DownloadManagerCmp implements OnInit, OnDestroy, OnChanges {\n  downloadManager: DownloadManager;\n  breadcrumbs: Array<DirectoryEntry>;\n  segmentValue: string = 'downloading';\n  private destroy: boolean;\n\n  constructor(\n    private downloadManagerCtl: DownloadManagerController,\n    private file: File,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n    this.destroy = false;\n    this.downloadManager = { downloadingList: [], fileList: [] };\n    this.subscribe();\n    this.breadcrumbs = [];\n    this.loadFileList(this.downloadManagerCtl.downloadDirectory, true);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy = true;\n  }\n\n  subscribe() {\n    this.downloadManagerCtl.event.subscribe((event: DownloadEvent) => {\n      if (this.destroy) return;\n      this.update(event);\n    });\n  }\n\n  update(event: DownloadEvent) {\n    let file: DownloadEvent = _.find(this.downloadManager.downloadingList,\n      { fileName: event.fileName, filePath: event.filePath });\n    if (isPresent(file)) {\n      if (file.progress === 100) {\n        file.progress = 0;\n      }\n      if (event.progress > file.progress) {\n        file.progress = event.progress;\n      }\n      return;\n    }\n    this.downloadManager.downloadingList.push(event);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    console.log(changes);\n  }\n\n  loadFileList(directoryPath: string, push: boolean) {\n    this.file.resolveDirectoryUrl(directoryPath).then(directory => {\n      if (push) {\n        this.breadcrumbs.push(directory);\n      }\n      let reader: DirectoryReader = directory.createReader();\n      this.downloadManager.fileList.length = 0;\n      reader.readEntries(entries => {\n        this.ngZone.run(() => {\n          entries.forEach(e => {\n            this.downloadManager.fileList.push(e);\n          });\n        });\n      });\n    });\n  }\n\n  itemCheck(entry: Entry) {\n    if (entry.isDirectory) {\n      this.loadFileList(entry.nativeURL, true);\n    }\n  }\n\n  breadcrubCheck(entry: DirectoryEntry) {\n    let index = _.findIndex(this.breadcrumbs, { fullPath: entry.fullPath });\n    if (this.breadcrumbs.length - 1 !== index) {\n      this.breadcrumbs.length = index + 1;\n    }\n    this.loadFileList(entry.nativeURL, false);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'page-download-file',\n  styles: [`\n    .breadcrumb{\n      display: flex;\n      flex-direction: row;\n      list-style:none;\n      padding-left: 10px;\n    }\n    .breadcrumb ion-icon{\n      padding-left: 5px;\n      padding-right: 5px;\n      font-size: 1em;\n    }\n  `],\n  template: `\n    <ion-header>\n      <ion-navbar>\n        <ion-title>文件下载</ion-title>\n      </ion-navbar>\n      <ion-segment [(ngModel)]=\"segmentValue\">\n        <ion-segment-button value=\"downloading\">正在下载</ion-segment-button>\n        <ion-segment-button value=\"history\">下载历史</ion-segment-button>\n      </ion-segment>\n    </ion-header>\n    <ion-content>\n      <div [ngSwitch]=\"segmentValue\">\n        <ion-list *ngSwitchCase=\"'downloading'\">\n          <ion-item *ngFor=\"let item of downloadManager.downloadingList\">\n            <div>{{item.fileName}}({{item.progress}}%)</div>\n            <div>\n              <progress value=\"{{item.progress}}\" max=\"100\"></progress>\n            </div>\n          </ion-item>\n        </ion-list>\n        <ion-list *ngSwitchCase=\"'history'\">\n          <ul class=\"breadcrumb\">\n            <li *ngFor=\"let item of breadcrumbs; let last = last\" tappable (click)=\"breadcrubCheck(item)\">\n              <a>{{item.name}}</a><ion-icon *ngIf=\"!last\" name=\"ios-arrow-forward-outline\"></ion-icon>\n            </li>\n          </ul>\n          <ion-item-divider *ngFor=\"let item of downloadManager.fileList\" tappable (click)=\"itemCheck(item)\">\n            <ion-icon name=\"{{item.isFile ? 'document': 'folder'}}\" item-left></ion-icon>\n            {{item.name}}\n            <ion-icon *ngIf=\"!last\" name=\"ios-arrow-forward-outline\" item-right></ion-icon>\n          </ion-item-divider>\n        </ion-list>\n      </div>\n    </ion-content>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DownloadManagerController, },\n{type: File, },\n{type: NgZone, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}