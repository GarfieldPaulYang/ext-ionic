{"version":3,"sources":["nav-button-bar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAa,MAAO,eAAA,CAAgB;AAavE;IAAA;QAEE,SAAI,GAAW,MAAM,CAAC;QAMtB,cAAS,GAA4B,IAAI,YAAY,EAAa,CAAC;IAuGrE,CAAC;IArGC,8BAAO,GAAP,UAAQ,IAAe;QACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAmGH,mBAAC;AAAD,CA/GA,AA+GC;;AAlGM,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,gBAAgB;gBAC1B,MAAM,EAAE,CAAC,i4CAkER,CAAC;gBACF,QAAQ,EAAE,suBAiBT;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,2BAAc,GAA2C;IAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAC/B,CAAC","file":"nav-button-bar.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Page } from 'ionic-angular/navigation/nav-util';\n\nexport interface NavButton {\n  label: string;\n  page?: Page | string;\n  params?: any;\n  icon?: string;\n  iconColor?: string;\n  number?: number;\n}\n\n\nexport class NavButtonBar {\n  \n  type: string = 'icon';\n\n  \n  items: Array<NavButton>;\n\n  \n  itemClick: EventEmitter<NavButton> = new EventEmitter<NavButton>();\n\n  onClick(item: NavButton) {\n    this.itemClick.emit(item);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'nav-button-bar',\n  styles: [`\n    .btn-group {\n      display: flex;\n      flex-flow: row wrap;\n      width: 100%;\n    }\n\n    .btn-group>.btn-box {\n      position: relative;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 25vmin;\n      height: 25vmin;\n    }\n\n    .btn-box>.btn-box-content {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 20vmin;\n      height: 20vmin;\n    }\n\n    .btn-box-content>.btn-text {\n      width: 100%;\n      bottom: 1vmin;\n      text-align: center;\n      color: black;\n      font-size: 0.8em;\n    }\n\n    .notify-bar{\n      display: -webkit-flex;\n      display: flex;\n      flex-flow: row;\n      width: 100%;\n      margin-top: 10px;\n      margin-bottom: 10px;\n      overflow-x: scroll;\n      overflow-y: hidden;\n    }\n\n    .notify-bar > .notify-bar-box{\n      display: -webkit-flex;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 25vmin;\n      height: 25vmin;\n      border-right:1px solid #F2F3F5;\n      text-align: center;\n    }\n\n    .notify-bar > .notify-bar-box:last-child{\n      border-right: none;\n    }\n\n    .notify-bar-box > button{\n      width: calc(25vmin / 1.5);\n      height: calc(25vmin / 1.5);\n      color: black;\n      font-size: 2em;\n      border-radius: 15px;\n    }\n  `],\n  template: `\n    <div *ngIf=\"type === 'icon'\" class=\"btn-group\">\n      <a class=\"btn-box\" *ngFor=\"let item of items\" (click)=\"onClick(item)\">\n        <div class=\"btn-box-content\">\n          <ion-icon name=\"{{item.icon}}\" style=\"font-size: 2.5em\" [style.color]=\"item.iconColor\"></ion-icon>\n          <div class=\"btn-text\">{{item.label}}</div>\n        </div>\n        <div class=\"button-effect\"></div>\n      </a>\n    </div>\n\n    <div *ngIf=\"type === 'number'\" class=\"notify-bar\">\n      <div *ngFor=\"let item of items\" class=\"notify-bar-box\">\n        <button ion-button color=\"light\" outline (click)=\"onClick(item)\">{{item.number}}</button>\n        <label>{{item.label}}</label>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'items': [{ type: Input },],\n'itemClick': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}