{"version":3,"sources":["nav-button-bar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAa,MAAO,eAAA,CAAgB;AAavE;IAAA;QAKE,aAAQ,GAA4B,IAAI,YAAY,EAAa,CAAC;IA6DpE,CAAC;IA3DC,8BAAO,GAAP,UAAQ,IAAe;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAyDH,mBAAC;AAAD,CAlEA,AAkEC;;AAxDM,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,gBAAgB;gBAC1B,MAAM,EAAE,CAAC,yoBAgCR,CAAC;gBACF,QAAQ,EAAE,yaAUT;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,2BAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAC9B,CAAC","file":"nav-button-bar.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Page } from 'ionic-angular/navigation/nav-util';\n\nexport interface NavButton {\n  page?: Page | string;\n  params?: any;\n  notLog?: boolean;\n  icon: string;\n  label: string;\n  iconColor?: string;\n}\n\n\nexport class NavButtonBar {\n  \n  items: Array<NavButton>;\n\n  \n  navClick: EventEmitter<NavButton> = new EventEmitter<NavButton>();\n\n  onClick(item: NavButton) {\n    this.navClick.emit(item);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'nav-button-bar',\n  styles: [`\n    .btn-group {\n      display: flex;\n      flex-flow: row wrap;\n      width: 100%;\n    }\n\n    .btn-group>.btn-box {\n      position: relative;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 25vmin;\n      height: 25vmin;\n    }\n\n    .btn-box>.btn-box-content {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 20vmin;\n      height: 20vmin;\n    }\n\n    .btn-box-content>.btn-text {\n      width: 100%;\n      bottom: 1vmin;\n      text-align: center;\n      color: black;\n      font-size: 0.8em;\n    }\n  `],\n  template: `\n    <div class=\"btn-group\">\n      <a class=\"btn-box\" *ngFor=\"let item of items\" (buttonClick)=\"onClick(item)\">\n        <div class=\"btn-box-content\">\n          <ion-icon name=\"{{item.icon}}\" style=\"font-size: 2.5em\" [style.color]=\"item.iconColor\"></ion-icon>\n          <div class=\"btn-text\">{{item.label}}</div>\n        </div>\n        <div class=\"button-effect\"></div>\n      </a>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'navClick': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}